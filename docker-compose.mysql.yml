# Docker Compose Configuration for Car Cash Offers App with MySQL
# Based on DockChron-style database setup patterns

version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: car-cash-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_secure_password}
      MYSQL_DATABASE: ${DB_NAME:-car_cash_offers}
      MYSQL_USER: ${DB_USER:-car_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secure_password}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./mysql.cnf:/etc/mysql/conf.d/custom.cnf:ro
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --max-connections=100
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - car_cash_network

  # Uncomment if you want to run the app in Docker too
  # app:
  #   build: .
  #   container_name: car-cash-app
  #   restart: unless-stopped
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     NODE_ENV: production
  #     DB_HOST: mysql
  #     DB_PORT: 3306
  #     DB_USER: ${DB_USER:-car_user}
  #     DB_PASSWORD: ${DB_PASSWORD:-secure_password}
  #     DB_NAME: ${DB_NAME:-car_cash_offers}
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   networks:
  #     - car_cash_network

  # MySQL Admin Interface (optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: car-cash-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_secure_password}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_secure_password}
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - car_cash_network

volumes:
  mysql_data:
    driver: local

networks:
  car_cash_network:
    driver: bridge